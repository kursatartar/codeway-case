stages:
  - build
  - deploy

variables:
  DOCKER_REGISTRY: "docker.io"
  IMAGE_NAME: "kursatartar/nodejs-express-mysql"
  HELM_RELEASE_NAME: "chart-case"
  NAMESPACE: "default"
  HELM_CHART_DIR: "./chart-case"
  VALUES_FILE: "./chart-case/values.yml"

# Docker imajını oluşturma ve push işlemi
build:
  stage: build
  image: node:16  # Node.js Docker imajı
  script:
    - echo "Building Docker image..."
    - |
      if [ "$CI_COMMIT_REF_NAME" == "main" ]; then
        export IMAGE_TAG="latest"
      elif [ "$CI_COMMIT_REF_NAME" == "staging" ]; then
        export IMAGE_TAG="staging"
      else
        export IMAGE_TAG="dev"
      fi
    - echo "Tagging Docker image as $IMAGE_TAG"
    - docker build -t $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG .
    - docker push $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
  only:
    - main
    - staging

# Deploy işlemi - production (main branch)
deploy_main:
  stage: deploy
  image: node:16  # Node.js Docker imajı
  script:
    - echo "Deploying to production (main branch)..."
    - helm upgrade --install $HELM_RELEASE_NAME $HELM_CHART_DIR -f $VALUES_FILE --namespace $NAMESPACE
  only:
    - main

# Deploy işlemi - staging branch
deploy_staging:
  stage: deploy
  image: node:16  # Node.js Docker imajı
  script:
    - echo "Deploying to staging..."
    - helm upgrade --install $HELM_RELEASE_NAME $HELM_CHART_DIR -f $VALUES_FILE --namespace $NAMESPACE
  only:
    - staging
