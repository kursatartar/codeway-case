stages:
  - build
  - deploy

variables:
  DOCKER_REGISTRY: "docker.io"
  IMAGE_NAME: "kursatartar/nodejs-express-mysql"
  HELM_RELEASE_NAME: "chart-case"
  NAMESPACE: "default"
  HELM_CHART_DIR: "./chart-case"
  VALUES_FILE: "./chart-case/values.yml"
  ARGOCD_SERVER: "your-argocd-server"  # ArgoCD sunucunuzun adresi
  ARGOCD_PROJECT: "your-argocd-project"  # ArgoCD projeniz
  GIT_REPO_URL: "https://gitlab.com/kursat8/case-study.git"  # Gitlab repository URL'niz

before_script:
  - echo "Logging into Docker Hub..."
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin  # Docker Hub'a giriş
  - apk add --no-cache curl
  - curl -fsSL https://get.helm.sh/helm-v3.10.1-linux-amd64.tar.gz | tar -xzv
  - mv linux-amd64/helm /usr/local/bin/helm
  - curl -sSL https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml | kubectl apply -f - # ArgoCD kurulumu

# Docker imajını oluşturma ve push işlemi
build:
  stage: build
  image: docker:latest  # Docker imajı
  services:
    - docker:dind  # Docker-in-Docker servisini başlatıyoruz
  script:
    - echo "Building Docker image..."
    - docker build -t $DOCKER_REGISTRY/$IMAGE_NAME:$CI_COMMIT_REF_NAME .
    - docker push $DOCKER_REGISTRY/$IMAGE_NAME:$CI_COMMIT_REF_NAME
  only:
    - main  # Bu iş sadece main branch'inde çalışacak

# ArgoCD'ye entegrasyon ve dağıtım işlemi
deploy_main:
  stage: deploy
  image: alpine:latest  # Hafif bir imaj kullanabiliriz
  before_script:
    - echo "Setting up ArgoCD CLI..."
    - apk add --no-cache curl
    - curl -sSL https://github.com/argoproj/argo-cd/releases/download/v2.9.8/argocd-linux-amd64 -o /usr/local/bin/argocd
    - chmod +x /usr/local/bin/argocd
    - echo "Authenticating with ArgoCD..."
    - argocd login $ARGOCD_SERVER --username admin --password $ARGOCD_PASSWORD --insecure # ArgoCD'ye giriş
    - argocd app sync $ARGOCD_PROJECT # ArgoCD projesi ile senkronizasyon
  script:
    - echo "Deploying to production using ArgoCD..."
    - kubectl apply -f $HELM_CHART_DIR -n $NAMESPACE  # Helm chart'ı ile uygulamayı dağıt
    - argocd app set $ARGOCD_PROJECT --sync-policy automated --auto-prune # ArgoCD ile sürekli dağıtım
  only:
    - main  # Yalnızca main branch'inde dağıtım yapacak

